//
//  ViewController.swift
//  HW2_4_Task_1
//
//  Created by –†–æ–º–∞–Ω –ó–∞—Ö–∞—Ä–æ–≤ on 31.05.2020.
//  Copyright ¬© 2020 –†–æ–º–∞–Ω –ó–∞—Ö–∞—Ä–æ–≤. All rights reserved.
//

import UIKit

class MainViewController: UIViewController, UITextFieldDelegate {
    
    @IBOutlet weak var userNameTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!
    
    let user = User()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        userNameTextField.delegate = self
        passwordTextField.delegate = self
        setActiveField(as: userNameTextField)
    }
    
    // MARK: Keyboard
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        super.touchesBegan(touches, with: event)
        view.endEditing(true)
        
//      self.view.endEditing(true)
//
//        –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ self —Ç—É—Ç –ª–∏—à–Ω–µ–µ. –¢—ã –≤–µ–¥—å –æ–±—Ä–∞—â–∞–µ—à—å—Å—è –∫ —Å–≤–æ–π—Å—Ç–≤—É –∫–ª–∞—Å—Å–∞ –Ω–µ –∏–∑ –±–ª–æ–∫–∞ –∑–∞–º—ã–∫–∞–Ω–∏—è, –ø–æ—ç—Ç–æ–º—É —è–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ —Ç–æ, —á—Ç–æ —ç—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –∫–ª–∞—Å—Å–∞ –Ω–µ –Ω—É–∂–Ω–æ. –ü–æ–Ω—è—Ç—å –≤ –∫–∞–∫–æ–º –º–µ—Å—Ç–µ –Ω—É–∂–Ω–æ —è–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å self –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ: –≤–µ–∑–¥–µ –ø–∏—à–∏ –±–µ–∑ self, –∞ —Ç–∞–º –≥–¥–µ —ç—Ç–æ –Ω–∞–¥–æ, –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä —Ç–µ–±–µ —Å–æ–æ–±—â–∏—Ç. –≠—Ç–æ –±—ã–≤–∞–µ—Ç –≤ –±–ª–æ–∫–∞—Ö –∑–∞–º—ã–∫–∞–Ω–∏–π, –∫–∞–∫ —è —É–∂–µ —Å–∫–∞–∑–∞–ª –∏ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä –º–µ—Ç–æ–¥–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –∫–ª–∞—Å—Å–∞.
    }
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        if textField == userNameTextField {
            setActiveField(as: passwordTextField)
        } else if textField == passwordTextField {
            logIn()
        }
        return false
    }
    
    func setActiveField(as field: UITextField) {
        field.becomeFirstResponder()
    }
    
    // MARK: Log in
    func checkCredential() -> Bool {
        //check name
        guard let inputTextName = userNameTextField.text, !inputTextName.isEmpty else {
            showAlert(with: "User name is empty", and: "Please enter üñã", active: userNameTextField, set: "")
            return false
        }
        if let _ = Double(inputTextName) {
            showAlert(with: "Wrong format user name", and: "Please enter correctly ‚úíÔ∏è", active: userNameTextField, set: "")
            return false
        }
        guard inputTextName == user.userName else {
            showAlert(with: "Invalid user name", and: "Please enter correctly ‚úíÔ∏è", active: userNameTextField, set: "")
            return false
        }
        //check password
        guard let inputTextPassword = passwordTextField.text, !inputTextPassword.isEmpty else {
            showAlert(with: "Password is empty", and: "Please enter üîè", active: passwordTextField, set: "")
            return false
        }
        guard inputTextPassword == user.password else {
            showAlert(with: "Invalid password", and: "Please enter correctly üîê", active: passwordTextField, set: "")
            return false
        }
        return true
    }
    
    func logIn() {
        if checkCredential() {
            performSegue(withIdentifier: "showDetails", sender: userNameTextField.text)
        }
    }
    
    @IBAction func logInActionButton(_ sender: UIButton) {
        logIn()
    }
    
    // MARK: Forgot
    @IBAction func forgotUserNameActionButton(_ sender: UIButton) {
        showAlert(with: "User name", and: "Please enter \"User\" ‚èé", active: userNameTextField, set: user.userName)
    }
    
    @IBAction func forgotPasswordActionButton(_ sender: UIButton) {
        showAlert(with: "Password", and: "Please enter \"Password\" ‚èé", active: passwordTextField, set: user.password)
    }
    
    // MARK: Navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if segue.identifier == "showDetails" {
            let tabBarController = segue.destination as! UITabBarController
            let detailViewController = tabBarController.viewControllers?.first as! DetailViewController
            detailViewController.userName = sender as? String
        }
    }
    
    @IBAction func unwindSegue(segue: UIStoryboardSegue) {
//        if let _ = segue.source as? DetailViewController {
//            userNameTextField.text = ""
//            passwordTextField.text = ""
//            setActiveField(as: userNameTextField)
//        }
        
//        if let _ = segue.source as? DetailViewController
//
//        –≠—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –ª–∏—à–Ω—è—è. –£ —Ç–µ–±—è –≤–µ–¥—å –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –º–µ—Å—Ç–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –æ—Ç –∫—É–¥–∞ —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å –ª–æ–≥–∞—É—Ç –∏ —ç—Ç–æ –º–µ—Å—Ç–æ WelcomeViewController. –î–∞ –¥–∞–∂–µ –µ—Å–ª–∏ –±—ã –±—ã–ª–æ –Ω–µ –æ–¥–Ω–æ —ç—Ç–æ –≤—Å–µ —Ä–∞–≤–Ω–æ –Ω–µ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è. –ù–µ –≤–∞–∂–Ω–æ —Å –∫–∞–∫–æ–≥–æ –≤—å—é –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ —Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ—à—å—Å—è, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –æ—Ç—á–∏—Å—Ç–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è.

        userNameTextField.text = ""
        passwordTextField.text = ""
        setActiveField(as: userNameTextField)
        
    }
    
}

// MARK: UIAlertController
extension MainViewController {
    private func showAlert(with title: String, and message: String, active textField: UITextField, set value: String) {
        let alert = UIAlertController(title: title, message: message, preferredStyle: .alert)
        let okAction = UIAlertAction(title: "üÜó", style: .default) { _ in
            textField.text = value
            self.setActiveField(as: textField)
        }
        alert.addAction(okAction)
        present(alert, animated: true)
    }
}


